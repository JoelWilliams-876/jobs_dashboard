# -*- coding: utf-8 -*-
"""jobs_dashboard.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14AT7Hey6q40BVj6aZ-XcH178wJgVubxn
"""

import requests
import pandas as pd
import plotly.express as px
from bs4 import BeautifulSoup
import streamlit as st
from datetime import datetime

# Function to fetch U-3 and U-6 data from the cps_empsit_a12 table
def fetch_unemployment_data():
    url = "https://www.bls.gov/news.release/empsit.t15.htm"
    response = requests.get(url)
    soup = BeautifulSoup(response.content, 'html.parser')
    table = soup.find("table", {"id": "cps_empsit_a12"})

    if not table:
        st.error("Table cps_empsit_a12 not found.")
        return pd.DataFrame()

    rows = table.find_all("tr")

    # Extract rows for U-3 and U-6
    u3_row = table.find("tr", {"id": "cps_empsit_a12-4-0"})
    u6_row = table.find("tr", {"id": "cps_empsit_a12-7-0"})

    if not u3_row or not u6_row:
        st.error("Specified rows for U-3 or U-6 not found in the table.")
        return pd.DataFrame()

    # Extract columns 5 through 9 (monthly data for the last 5 months)
    def extract_row_data(row):
        cols = row.find_all("td")[4:9]  # Columns 5 through 9
        return [float(col.text.strip()) for col in cols]

    u3_data = extract_row_data(u3_row)
    u6_data = extract_row_data(u6_row)

    # Create a DataFrame with dates for the last 5 months
    today = datetime.now()
    dates = [(today.replace(day=1) - pd.DateOffset(months=i)).strftime("%b %Y") for i in range(len(u3_data))]
    dates.reverse()  # Ensure oldest dates are first

    df = pd.DataFrame({
        "date": dates,
        "U-3": u3_data,
        "U-6": u6_data
    })

    return df

# Main Streamlit app
st.title("BLS Unemployment Data")

# Fetch and display unemployment data
if 'unemployment_df' not in st.session_state:
    st.session_state.unemployment_df = fetch_unemployment_data()

if not st.session_state.unemployment_df.empty:
    unemployment_df = st.session_state.unemployment_df

    # Debugging: Display the fetched unemployment data
    st.write("Unemployment Data (Last 5 Months):")
    st.write(unemployment_df)

    # Select unemployment rate (U-3 or U-6)
    unemployment_type = st.radio("Select Unemployment Rate:", ["U-3", "U-6"])

    # Filter data for the selected unemployment rate
    selected_data = unemployment_df[["date", unemployment_type]].rename(columns={unemployment_type: "rate"})

    # Plot the unemployment data
    fig_unemployment = px.line(
        selected_data,
        x="date",
        y="rate",
        title=f"{unemployment_type} Unemployment Rate (Last 5 Months)",
        labels={"date": "Date", "rate": f"{unemployment_type} Unemployment Rate (%)"},
        template="plotly_dark"
    )
    st.plotly_chart(fig_unemployment)
else:
    st.error("No unemployment data available.")